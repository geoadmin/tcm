{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "AWS CloudFormation template to create a fixed-size WMS tile cluster",

  "Parameters" : {
    "InstanceType" : {
      "Description" : "EC2 instance type",
      "Type" : "String",
      "Default" : "c3.xlarge",
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },
    "ImageId" : {
      "Description" : "AMI to use for that cluster",
      "Type" : "String",
      "ConstraintDescription" : "must be a valid AMI"
    },
    "DesiredCapacity" : {
      "Description" : "Number of instances for that cluster",
      "Type": "Number",
      "Default" : "2",
      "MinValue" : "1",
      "MaxValue" : "20"
    },
    "AZs": {
      "Type" : "CommaDelimitedList",
      "Description" : "Availability zone to launch this cluster"
    },
    "Subnets" : {
      "Type" : "CommaDelimitedList",
      "Description" : "The list of SubnetIds where the stack will be launched"
    },
    "SecurityGroups" : {
      "Type" : "CommaDelimitedList",
      "Description" : "The list of SecurityGroups to associate"
    }
  },

  "Resources" : {
    "WmsCluster" : {
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "Properties" : {
        "AvailabilityZones" : { "Ref" : "AZs" },
        "LaunchConfigurationName" : { "Ref" : "LaunchConfig" },
        "DesiredCapacity": { "Ref": "DesiredCapacity" },
        "MinSize" : "1",
        "MaxSize" : "50",
        "LoadBalancerNames" : [ { "Ref" : "ElasticLoadBalancer" } ],
        "VPCZoneIdentifier" : {"Ref" : "Subnets"}
      }
    },

    "LaunchConfig" : {
      "Type" : "AWS::AutoScaling::LaunchConfiguration",
      "Properties" : {
        "ImageId" : { "Ref" : "ImageId" },
        "InstanceType" : { "Ref" : "InstanceType" },
        "SecurityGroups" : {"Ref" : "SecurityGroups"},
        "AssociatePublicIpAddress": false

      }
    },

    "ElasticLoadBalancer" : {
      "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties" : {
        "Subnets": {"Ref" : "Subnets"},
        "Listeners" : [ {
          "LoadBalancerPort" : "80",
          "InstancePort" : "80",
          "Protocol" : "HTTP"
        } ],
        "HealthCheck" : {
          "Target" : { "Fn::Join" : [ "", ["HTTP:", "80", "/index.html"]]},
          "HealthyThreshold" : "2",
          "UnhealthyThreshold" : "2",
          "Interval" : "5",
          "Timeout" : "3"
        }
      }
    }
  },

  "Outputs" : {
    "URL" : {
      "Description" : "URL of the ELB",
      "Value" :  { "Fn::Join" : [ "", [ "http://", { "Fn::GetAtt" : [ "ElasticLoadBalancer", "DNSName" ]}]]}
    }
  }
}
